#version 330

in vec2 fragTexCoord;
uniform sampler2D texture0;
out vec4 finalColor;

const float renderWidth = 800.0;
const float renderHeight = 450.0;
const float blurSize = 5.0; // Adjust for the blur size
const float sigma = blurSize / 3.0; // Adjust sigma based on blur size

float gaussian(float x, float sigma) {
    return exp(-0.5 * pow(x / sigma, 2.0)) / (sigma * sqrt(2.0 * 3.14159));
}

void main()
{
    vec2 tex_offset = vec2(1.0 / renderWidth, 1.0 / renderHeight);
    vec3 result = vec3(0.0);
    float totalWeight = 0.0;

    for (int x = -int(blurSize); x <= int(blurSize); x++)
    {
        for (int y = -int(blurSize); y <= int(blurSize); y++)
        {
            vec2 offset = vec2(tex_offset.x * float(x), tex_offset.y * float(y));
            float weight = gaussian(length(offset), sigma);
            result += texture(texture0, fragTexCoord + offset).rgb * weight;
            totalWeight += weight;
        }
    }

    result /= totalWeight;
    finalColor = vec4(result, 1.0);
}